#!/home/hisisJ/python3/bin/python3

"""
built and tested on only WebToB4.1
"""

import subprocess
import re
import time
import yaml
from socket import gethostname
import prometheus_client as prom


class WebToBadminConnector:
    """
    using WebToB CLI tool 'wsadmin'
    """
    def __init__(self, wtb_dir, wtb_svr):
        self.wtb_svr = wtb_svr #"fo" if re.search(r'FO|fo', self.hostname) else "mo"
        self.wtbc = "export WEBTOBDIR="+wtb_dir+"; $WEBTOBDIR/bin/wsadmin -C "

    def exec_cmd(self, cmd="help"):
        cmd_result = subprocess.run(self.wtbc+cmd, stdout=subprocess.PIPE, shell=True)
        return cmd_result.stdout.decode("utf-8")

    def get_stats(self):
        metrics = []
        # get cli-format output then parse it
        cmd_result_stdout = self.exec_cmd(cmd="si "+self.wtb_svr)
        for row in cmd_result_stdout.splitlines():
            split_row = row.split()
            # the row is split into 13 values on webtob 4.1
            if len(split_row) == 13 and split_row[1] == self.wtb_svr:
                metric = {"hth": split_row[0], "req": split_row[5], "resp": split_row[6], "curq": split_row[7], "tmoutq": split_row[9]}
                metrics.append(metric)
        return metrics


class PromClient:
    """
    export metrics of current WebToB status
    """
    def __init__(self, wtbc):
        self.wtbc = wtbc
        self.hostname = gethostname()
        self.frontend = "PC" if wtbc.wtb_svr == "fo" else "Mobile"
        # start client and set metric attributes
        prom.start_http_server(9101)
        self.gauge_req = prom.Gauge("wtb_http_requests", "number of http requests to webtob", ["frontend", "hostname", "hth"])
        self.gauge_resp = prom.Gauge("wtb_http_responses", "number of http responses to webtob", ["frontend", "hostname", "hth"])
        self.gauge_curq = prom.Gauge("wtb_http_current_queue_count", "number of waiting objects in a queue of webtob", ["frontend", "hostname", "hth"])
        self.gauge_tmoutq = prom.Gauge("wtb_http_timeout_queue_count", "number of dropped objects in a queue of  webtob", ["frontend", "hostname", "hth"])

    def get_value(self):
        output = self.wtbc.get_stats()
        for row in output:
            self.gauge_req.labels(frontend=self.frontend, hostname=self.hostname, hth=row["hth"]).set(row["req"])
            self.gauge_resp.labels(frontend=self.frontend, hostname=self.hostname, hth=row["hth"]).set(row["resp"])
            self.gauge_curq.labels(frontend=self.frontend, hostname=self.hostname, hth=row["hth"]).set(row["curq"])
            self.gauge_tmoutq.labels(frontend=self.frontend, hostname=self.hostname, hth=row["hth"]).set(row["tmoutq"])


if __name__ == "__main__":
    with open('wtb_exporter.yaml', 'r') as f:
        conf = yaml.safe_load(f)
        con = WebToBadminConnector(wtb_dir=conf["webtob_base_dir"], wtb_svr=conf["webtob_server_name"])
        xptr = PromClient(con)

    while True:
        xptr.get_value()
        time.sleep(3)